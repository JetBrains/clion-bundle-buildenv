source $(dirname ${BASH_SOURCE})/makepkg.conf

OPTIONS=(strip !docs libtool !staticlibs !emptydirs zipman purge !upx debug)


LDFLAGS="-Wl,-O1,--sort-common,--as-needed,-z,relro -Wl,-rpath='@{ORIGIN}/../lib'"


save_function() {
    local orig_func newname_func
    orig_func=$(declare -f $1) || return $?
    newname_func="$2${orig_func#$1}"
    eval "$newname_func"
}

save_function tidy_install tidy_install_original
tidy_install() {
    tidy_install_original
    tidy_chrpath
}

tidy_chrpath() {
    msg2 "$(gettext "Patching RPATH of binaries and libraries...")"

    local binary
    find . -type f -perm -u+w -print0 2>/dev/null | while read -rd '' binary ; do
        case "$(file -bi "$binary")" in
            *application/x-sharedlib*) ;;  # Libraries (.so)
            *application/x-executable*) ;; # Binaries
            *)
                continue ;;
        esac
        local rpath_line old_rpath new_rpath
        rpath_line=$(chrpath -l "$binary" 2>/dev/null) || continue
        old_rpath="${rpath_line#*: RPATH=}"
        local origin='${ORIGIN}'
        new_rpath="${old_rpath//'@{ORIGIN}'/${origin}}"
        if [[ "${new_rpath}" == "${old_rpath}" ]]; then 
            continue
        fi
        chrpath -r "${new_rpath}" "${binary#./}" | grep "new RPATH"
    done
}

